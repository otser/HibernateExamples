<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping package="net.viralpatel.hibernate.mtm.xml">

	<class name="Meeting" table="MEETING">

		<id name="meetingId" type="java.lang.Long" column="MEETING_ID">
			<generator class="native" />
		</id>

		<property name="subject" column="SUBJECT" />
		<property name="meetingDate" type="date" column="MEETING_DATE" />
		
		<property name="categorie" column="CATEGORIE">
		    <type name="org.hibernate.type.EnumType">
		        <param name="enumClass">net.viralpatel.hibernate.mtm.xml.Categorie</param>
		    </type>
		</property>
		

		<!-- inverse="true" : La relation est gérée par l'autre coté, i.e par la classe Employe 
		Une création ou sauvegarde d'un bean Meeting n'aura aucun effet sur les deux tables :  EMPLOYE, EMPLOYE_MEETING
		Elle agira uniquement sur la table du bean i.e : MEETING
		
		inverse="false" de deux cotés :s'il n'y a pas de cascade="all", alors il faut créer et attacher tous les object Eploye de la collection "employes" avant de pouvoir
		créer l'objet Meeting, sinon ==> org.hibernate.TransientObjectException: object references an unsaved transient instance - save the transient instance before flushing
		
		-->
		<set name="employes" table="EMPLOYE_MEETING" inverse="true" lazy="true" fetch="select">
			<key column="MEETING_ID" />
			<many-to-many column="EMPLOYE_ID" class="Employe" />
		</set>

	</class>
</hibernate-mapping>