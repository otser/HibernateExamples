package net.viralpatel.hibernate.mtm.anno.norma;

// default package
// Generated 9 sept. 2014 17:20:58 by Hibernate Tools 3.6.0

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.ManyToMany;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;


/**
 * Poste generated by hbm2java
 */
@Entity(name="net.viralpatel.hibernate.mtm.anno.norma.Poste")
@Table(name = "poste", catalog = "hibernate_examples")
public class Poste implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 2238753201117478703L;
	
	
	private Long posteId;
	private Float remBase;
	private Character categorie;
	private String description;
	private Set<Employe> employes = new HashSet<Employe>(0);

	public Poste() {
	}
	
	public Poste(Float remBase, Character categorie, String description) {
		super();
		this.remBase = remBase;
		this.categorie = categorie;
		this.description = description;
	}


	public Poste(Float remBase, Character categorie, String description,
			Set<Employe> employes) {
		this.remBase = remBase;
		this.categorie = categorie;
		this.description = description;
		this.employes = employes;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "poste_id", unique = true, nullable = false)
	public Long getPosteId() {
		return this.posteId;
	}

	public void setPosteId(Long posteId) {
		this.posteId = posteId;
	}

	@Column(name = "rem_base", precision = 12, scale = 0)
	public Float getRemBase() {
		return this.remBase;
	}

	public void setRemBase(Float remBase) {
		this.remBase = remBase;
	}

	@Column(name = "categorie", length = 1)
	public Character getCategorie() {
		return this.categorie;
	}

	public void setCategorie(Character categorie) {
		this.categorie = categorie;
	}

	@Column(name = "description", length = 50)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	//This side is much simpler than the owner side, as we only need to specify the mappedBy attribute of the @ManyToMany annotation. 
	//That means this "employes" collection is mapped by the "postes" collection on the owner side.
	//To make direction of the association becomes unidirectional, simply remove the "employes" collection from the "Poste" class:
	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "postes")
	public Set<Employe> getEmployes() {
		return employes;
	}

	
	public void setEmployes(Set<Employe> employes) {
		this.employes = employes;
	}

	public void addEmploye(Employe employe) {
		
		if(employes == null){
			employes = new HashSet<Employe>();
		}
		employes.add(employe);
		}
}
